apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
      tier: {{ .Values.backend.name }}
      track: stable
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
        tier: {{ .Values.backend.name }}
        track: stable
    spec:
      containers:
      - name: {{ .Values.backend.name }}
        image: {{ .Values.backend.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.backend.port }}
        env:
        - name: {{ .Values.profile.name }}
          value: {{ .Values.profile.value }} 
        {{- if eq .Values.profile.value "prod" }}
        - name: {{ .Values.backend.env.db_service.name }}
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.backend.env.db_service.source }}
              key: {{ .Values.backend.env.db_service.key }}
        - name: {{ .Values.backend.env.db_user.name }}
          valueFrom:
            configMapKeyRef:
              name:  {{ .Values.backend.env.db_user.source }}
              key:  {{ .Values.backend.env.db_user.key }}
        - name: {{ .Values.backend.env.db_password.name }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backend.env.db_password.source }}
              key: {{ .Values.backend.env.db_password.key }}             
        - name: {{ .Values.backend.env.db_name.name }}
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.backend.env.db_name.source }}
              key: {{ .Values.backend.env.db_name.key }}
         {{- end }}